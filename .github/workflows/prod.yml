# This is a basic workflow to help you get started with Actions

name: Prod - Build and Deploy

# Controls when the action will run. 
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    environment: Prod
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: AWS CLI
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Restore dependencies
        run: dotnet restore
    
      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal
      
      - name: Deploy to Lambda
        working-directory: ./src/StaplePuck.Hockey.NHLScheduler
        run: dotnet lambda deploy-serverless -sn prod-staplepuck-nhlscheduler -tp 'ApiUrlRoot="${{ vars.ApiUrlRoot }}";StatsLambdaARN="${{ vars.StatsLambdaARN }}";RoleARN="${{ vars.RoleARN }}";MinutesBetweenRuns="${{ vars.MinutesBetweenRuns }}";MinutesAfterLastGameStarts="${{ vars.MinutesAfterLastGameStarts }}"'
